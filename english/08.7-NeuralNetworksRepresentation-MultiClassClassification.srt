1
00:00:00,320 --> 00:00:01,480
In this video, I want to

2
00:00:01,490 --> 00:00:02,890
tell you about how to use neural

3
00:00:02,900 --> 00:00:04,820
networks to do multiclass

4
00:00:04,830 --> 00:00:06,810
classification where we may

5
00:00:06,820 --> 00:00:07,920
have more than one category

6
00:00:07,930 --> 00:00:10,460
that we're trying to distinguish amongst.

7
00:00:10,470 --> 00:00:12,590
In the last part of

8
00:00:12,600 --> 00:00:14,390
the last video, where we

9
00:00:14,400 --> 00:00:15,820
had the handwritten digit recognition

10
00:00:15,830 --> 00:00:17,690
problem, that was actually

11
00:00:17,700 --> 00:00:19,430
a multiclass classification problem because

12
00:00:19,440 --> 00:00:21,540
there were ten possible categories

13
00:00:21,550 --> 00:00:23,030
for recognizing the digits from

14
00:00:23,040 --> 00:00:24,050
0 through 9 and so, if

15
00:00:24,060 --> 00:00:25,820
you want us to fill you

16
00:00:25,830 --> 00:00:29,340
in on the details of how to do that.

17
00:00:30,410 --> 00:00:32,980
The way we do multiclass classification

18
00:00:32,990 --> 00:00:35,050
in a neural network is essentially

19
00:00:35,060 --> 00:00:38,600
an extension of the one versus all method.

20
00:00:38,610 --> 00:00:39,780
So, let's say that we

21
00:00:39,790 --> 00:00:42,620
have a computer vision example,

22
00:00:42,630 --> 00:00:44,000
where instead of just trying

23
00:00:44,010 --> 00:00:46,300
to recognize cars as in

24
00:00:46,310 --> 00:00:47,460
the original example that I started off

25
00:00:47,470 --> 00:00:49,050
with, but let's say that

26
00:00:49,060 --> 00:00:51,500
we're trying to recognize, you know, four

27
00:00:51,510 --> 00:00:53,020
categories of objects and given

28
00:00:53,030 --> 00:00:54,090
an image we want to

29
00:00:54,100 --> 00:00:57,190
decide if it is a pedestrian, a car, a motorcycle or a truck.

30
00:00:57,200 --> 00:00:58,910
If that's the case, what

31
00:00:58,920 --> 00:01:00,960
we would do is we would

32
00:01:00,970 --> 00:01:03,150
build a neural network with four

33
00:01:03,160 --> 00:01:04,700
output units so that

34
00:01:04,710 --> 00:01:09,100
our neural network now outputs a vector of four numbers.

35
00:01:09,110 --> 00:01:11,160
So, the output now is actually

36
00:01:11,170 --> 00:01:12,060
needing to be a vector of four

37
00:01:12,070 --> 00:01:13,530
numbers and what we're

38
00:01:13,540 --> 00:01:14,770
going to try to do is

39
00:01:14,780 --> 00:01:17,170
get the first output unit

40
00:01:17,180 --> 00:01:19,150
to classify: is the

41
00:01:19,160 --> 00:01:21,190
image a pedestrian, yes or no.

42
00:01:21,200 --> 00:01:25,100
The second unit to classify: is the image a car, yes or no.

43
00:01:25,110 --> 00:01:27,120
This unit to classify: is the

44
00:01:27,130 --> 00:01:29,220
image a motorcycle, yes or

45
00:01:29,230 --> 00:01:30,920
no, and this would classify:

46
00:01:30,930 --> 00:01:33,710
is the image a truck, yes or no.

47
00:01:33,720 --> 00:01:36,380
And thus, when the image

48
00:01:36,390 --> 00:01:37,810
is of a pedestrian, we

49
00:01:37,820 --> 00:01:39,400
would ideally want the network

50
00:01:39,410 --> 00:01:40,240
to output 1, 0, 0, 0,

51
00:01:40,250 --> 00:01:41,510
when it is a

52
00:01:41,520 --> 00:01:42,740
car we want it to output

53
00:01:42,750 --> 00:01:43,830
0, 1, 0, 0, when this

54
00:01:43,840 --> 00:01:46,380
is a motorcycle, we get it to or rather, we want

55
00:01:46,390 --> 00:01:47,570
it to output 0, 0,

56
00:01:47,580 --> 00:01:50,470
1, 0 and so on.

57
00:01:50,750 --> 00:01:52,260
So this is just like

58
00:01:52,270 --> 00:01:54,180
the "one versus all" method

59
00:01:54,190 --> 00:01:55,670
that we talked about when we

60
00:01:55,680 --> 00:01:58,310
were describing logistic regression, and

61
00:01:58,320 --> 00:02:01,280
here we have essentially four logistic

62
00:02:01,290 --> 00:02:03,250
regression classifiers, each of

63
00:02:03,260 --> 00:02:04,990
which is trying to recognize one

64
00:02:05,000 --> 00:02:06,930
of the four classes that

65
00:02:06,940 --> 00:02:09,530
we want to distinguish amongst.

66
00:02:09,540 --> 00:02:10,850
So, rearranging the slide of

67
00:02:10,860 --> 00:02:12,530
it, here's our neural network

68
00:02:12,540 --> 00:02:14,320
with four output units and those

69
00:02:14,330 --> 00:02:15,660
are what we want h

70
00:02:15,670 --> 00:02:16,980
of x to be when we

71
00:02:16,990 --> 00:02:19,570
have the different images, and

72
00:02:19,580 --> 00:02:21,100
the way we're going to represent the

73
00:02:21,110 --> 00:02:23,250
training set in these settings

74
00:02:23,260 --> 00:02:24,880
is as follows. So, when we have

75
00:02:24,890 --> 00:02:27,340
a training set with different images

76
00:02:27,350 --> 00:02:29,250
of pedestrians, cars, motorcycles and

77
00:02:29,260 --> 00:02:30,500
trucks, what we're going

78
00:02:30,510 --> 00:02:32,180
to do in this example is

79
00:02:32,190 --> 00:02:34,980
that whereas previously we had

80
00:02:34,990 --> 00:02:37,030
written out the labels as

81
00:02:37,040 --> 00:02:38,700
y being an integer from

82
00:02:38,710 --> 00:02:42,270
1, 2, 3 or 4. Instead of

83
00:02:42,280 --> 00:02:44,880
representing y this way,

84
00:02:44,890 --> 00:02:47,040
we're going to instead represent y

85
00:02:47,050 --> 00:02:50,900
as follows: namely Yi

86
00:02:54,850 --> 00:02:55,220
will be either 1, 0, 0, 0

87
00:02:55,230 --> 00:02:57,480
or 0, 1, 0, 0 or 0, 0, 1, 0 or 0, 0, 0, 1 depending on what the

88
00:02:57,490 --> 00:02:59,400
corresponding image Xi is.

89
00:02:59,410 --> 00:03:01,220
And so one training example

90
00:03:01,230 --> 00:03:04,520
will be one pair Xi colon Yi

91
00:03:04,530 --> 00:03:06,430
where Xi is an image with, you

92
00:03:06,440 --> 00:03:08,160
know one of the four objects and

93
00:03:08,170 --> 00:03:10,960
Yi will be one of these vectors.

94
00:03:10,970 --> 00:03:12,410
And hopefully, we can find

95
00:03:12,420 --> 00:03:14,010
a way to get our

96
00:03:14,020 --> 00:03:15,280
Neural Networks to output some

97
00:03:15,290 --> 00:03:17,300
value. So, the h of x

98
00:03:17,310 --> 00:03:20,540
is approximately y and

99
00:03:20,550 --> 00:03:22,590
both h of x and Yi,

100
00:03:22,600 --> 00:03:24,010
both of these are going

101
00:03:24,020 --> 00:03:26,050
to be in our example,

102
00:03:26,060 --> 00:03:30,200
four dimensional vectors when we have four classes.

103
00:03:31,810 --> 00:03:33,160
So, that's how you

104
00:03:33,170 --> 00:03:36,280
get neural network to do multiclass classification.

105
00:03:36,290 --> 00:03:38,040
This wraps up our discussion on

106
00:03:38,050 --> 00:03:40,110
how to represent Neural Networks

107
00:03:40,120 --> 00:03:42,770
that is on our hypotheses representation.

108
00:03:42,780 --> 00:03:44,680
In the next set of videos, let's

109
00:03:44,690 --> 00:03:45,980
start to talk about how take

110
00:03:45,990 --> 00:03:47,560
a training set and how to

111
00:03:47,570 --> 00:03:51,470
automatically learn the parameters of the neural network.

